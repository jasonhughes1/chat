{"ast":null,"code":"var _jsxFileName = \"/Users/rush/dev/stash/chat-application/frontend/src/ChatAppController.js\";\nimport React, { Component } from 'react';\nimport MessageInput from './MessageInput.js';\nimport MessageContainer from './MessageContainer';\nconst url = 'ws://localhost:3030';\nexport default class ChatAppController extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      messages: [],\n      user: ''\n    };\n    this.ws = new WebSocket(url);\n\n    this.createMessage = message => {\n      this.setState(state => ({\n        messages: [message, ...state.messages]\n      }));\n    };\n\n    this.sendMessage = newMessage => {\n      let generateMessage = {\n        user: this.state.user,\n        message: newMessage\n      };\n      this.ws.send(JSON.stringify(generateMessage));\n      this.createMessage(generateMessage);\n    };\n  }\n\n  componentDidMount() {\n    this.ws.onopen = () => {\n      console.log('server is connected');\n    };\n\n    this.ws.onmessage = event => {\n      const message = JSON.parse(event.data);\n      this.createMessage(message);\n    };\n\n    this.ws.onclose = () => {\n      this.setState({\n        ws: new WebSocket(url)\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chat-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chat-message-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.messages.map((message, index) => React.createElement(MessageContainer, {\n      key: index,\n      message: message.message,\n      user: message.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"name-and-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"name-input-field\",\n      placeholder: 'Enter your name...',\n      value: this.state.user,\n      onChange: e => this.setState({\n        user: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(MessageInput, {\n      onSubmitMessage: messageString => this.sendMessage(messageString),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/rush/dev/stash/chat-application/frontend/src/ChatAppController.js"],"names":["React","Component","MessageInput","MessageContainer","url","ChatAppController","state","messages","user","ws","WebSocket","createMessage","message","setState","sendMessage","newMessage","generateMessage","send","JSON","stringify","componentDidMount","onopen","console","log","onmessage","event","parse","data","onclose","render","map","index","e","target","value","messageString"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,MAAMC,GAAG,GAAG,qBAAZ;AAEA,eAAe,MAAMC,iBAAN,SAAgCJ,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACrDK,KADqD,GAC7C;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,IAAI,EAAE;AAFF,KAD6C;AAAA,SAMrDC,EANqD,GAMhD,IAAIC,SAAJ,CAAcN,GAAd,CANgD;;AAAA,SAyBrDO,aAzBqD,GAyBpCC,OAAD,IAAa;AACzB,WAAKC,QAAL,CAAeP,KAAD,KAAY;AAACC,QAAAA,QAAQ,EAAE,CAACK,OAAD,EAAU,GAAGN,KAAK,CAACC,QAAnB;AAAX,OAAZ,CAAd;AACH,KA3BoD;;AAAA,SA6BrDO,WA7BqD,GA6BtCC,UAAD,IAAgB;AAC1B,UAAIC,eAAe,GAAG;AAACR,QAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAAlB;AAAwBI,QAAAA,OAAO,EAAEG;AAAjC,OAAtB;AACA,WAAKN,EAAL,CAAQQ,IAAR,CAAaC,IAAI,CAACC,SAAL,CAAeH,eAAf,CAAb;AACA,WAAKL,aAAL,CAAmBK,eAAnB;AACH,KAjCoD;AAAA;;AAQrDI,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,EAAL,CAAQY,MAAR,GAAiB,MAAM;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH,KAFD;;AAIA,SAAKd,EAAL,CAAQe,SAAR,GAAqBC,KAAD,IAAW;AAC3B,YAAMb,OAAO,GAAGM,IAAI,CAACQ,KAAL,CAAWD,KAAK,CAACE,IAAjB,CAAhB;AACA,WAAKhB,aAAL,CAAmBC,OAAnB;AACH,KAHD;;AAKA,SAAKH,EAAL,CAAQmB,OAAR,GAAkB,MAAM;AACpB,WAAKf,QAAL,CAAc;AACVJ,QAAAA,EAAE,EAAE,IAAIC,SAAJ,CAAcN,GAAd;AADM,OAAd;AAGH,KAJD;AAKH;;AAYDyB,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKvB,KAAL,CAAWC,QAAX,CAAoBuB,GAApB,CAAwB,CAAClB,OAAD,EAAUmB,KAAV,KACrB,oBAAC,gBAAD;AACI,MAAA,GAAG,EAAEA,KADT;AAEI,MAAA,OAAO,EAAEnB,OAAO,CAACA,OAFrB;AAGI,MAAA,IAAI,EAAEA,OAAO,CAACJ,IAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CADJ,EAUI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,SAAS,EAAC,kBADd;AAEI,MAAA,WAAW,EAAE,oBAFjB;AAGI,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,IAHtB;AAII,MAAA,QAAQ,EAAEwB,CAAC,IAAI,KAAKnB,QAAL,CAAc;AAACL,QAAAA,IAAI,EAAEwB,CAAC,CAACC,MAAF,CAASC;AAAhB,OAAd,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOI,oBAAC,YAAD;AACI,MAAA,eAAe,EAAEC,aAAa,IAAI,KAAKrB,WAAL,CAAiBqB,aAAjB,CADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAVJ,CADJ;AAwBH;;AA5DoD","sourcesContent":["import React, {Component} from 'react'\nimport MessageInput from './MessageInput.js'\nimport MessageContainer from './MessageContainer'\n\nconst url = 'ws://localhost:3030';\n\nexport default class ChatAppController extends Component {\n    state = {\n        messages: [],\n        user: ''\n    };\n\n    ws = new WebSocket(url);\n\n    componentDidMount() {\n        this.ws.onopen = () => {\n            console.log('server is connected')\n        };\n\n        this.ws.onmessage = (event) => {\n            const message = JSON.parse(event.data);\n            this.createMessage(message)\n        };\n\n        this.ws.onclose = () => {\n            this.setState({\n                ws: new WebSocket(url),\n            })\n        }\n    }\n\n    createMessage = (message) => {\n        this.setState((state) => ({messages: [message, ...state.messages]}))\n    };\n\n    sendMessage = (newMessage) => {\n        let generateMessage = {user: this.state.user, message: newMessage};\n        this.ws.send(JSON.stringify(generateMessage));\n        this.createMessage(generateMessage)\n    };\n\n    render() {\n        return (\n            <div className='chat-container'>\n                <div className='chat-message-container'>\n                    {this.state.messages.map((message, index) =>\n                        <MessageContainer\n                            key={index}\n                            message={message.message}\n                            user={message.user}\n                        />\n                    )}\n                </div>\n                <div className='name-and-message'>\n                    <input\n                        className='name-input-field'\n                        placeholder={'Enter your name...'}\n                        value={this.state.user}\n                        onChange={e => this.setState({user: e.target.value})}\n                    />\n                    <MessageInput\n                        onSubmitMessage={messageString => this.sendMessage(messageString)}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}